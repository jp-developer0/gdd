USE [GD1C2020]
GO

-- Crea el esquema si no existe. Si ya existe, elimina todo y vuelve a crearlo.
IF EXISTS (SELECT SCHEMA_ID FROM sys.schemas WHERE [name] = 'GDD2020')
BEGIN
	PRINT('El Schema GDD2020. ya existe! Eliminando...')


--Eliminar Contraits
	PRINT('Eliminando constraints...')

	--Tabla rol Por Usuario
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].UC_ROLXUSUARIO')  )
	ALTER TABLE [GDD2020].[ROLXUSUARIO] DROP CONSTRAINT UC_ROLXUSUARIO
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_RXU_ROL_CODIGO')  )
	ALTER TABLE [GDD2020].[ROLXUSUARIO] DROP CONSTRAINT FK_RXU_ROL_CODIGO
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_RXU_USUARIO_USERNAME')  )
	ALTER TABLE [GDD2020].[ROLXUSUARIO] DROP CONSTRAINT FK_RXU_USUARIO_USERNAME
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_TIPO_BUTACA_ID')  )
	ALTER TABLE [GDD2020].[TIPO_BUTACA] DROP CONSTRAINT FK_TIPO_BUTACA_ID

	--Tabla CLiente      
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_CLIENTE_USUARIO_USERNAME')  )
	ALTER TABLE [GDD2020].[CLIENTE] DROP CONSTRAINT FK_CLIENTE_USUARIO_USERNAME

	
	--Tabla Rol x Funcionalidad --> VER DE CAMBIAR LOS NOMBRES
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].UC_ROL_X_FUNCIONALIDAD')  )
	ALTER TABLE [GDD2020].[FUNCIONALIDADXROL] DROP CONSTRAINT UC_ROL_X_FUNCIONALIDAD
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_RXF_ROL_CODIGO')  )
	ALTER TABLE [GDD2020].[FUNCIONALIDADXROL] DROP CONSTRAINT FK_RXF_ROL_CODIGO
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_RXF_FUNC_CODIGO')  )
	ALTER TABLE [GDD2020].[FUNCIONALIDADXROL] DROP CONSTRAINT FK_RXF_FUNC_CODIGO

	--Tabla Avion
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_AVION_BUTACA_NUMERO')  )
	ALTER TABLE [GDD2020].[AVION] DROP CONSTRAINT FK_AVION_BUTACA_NUMERO

 	--Tabla Vuelo
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_VUELO_AVION_IDENTIFICADOR')  )
	ALTER TABLE [GDD2020].[VUELO] DROP CONSTRAINT FK_VUELO_AVION_IDENTIFICADOR
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_VUELO_RUTA_AEREA_ID')  )
	ALTER TABLE [GDD2020].[VUELO] DROP CONSTRAINT FK_VUELO_RUTA_AEREA_ID 

	--Tabla Habitacion
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_TIPO_HABITACION_CODIGO')  )
	ALTER TABLE [GDD2020].[HABITACION] DROP CONSTRAINT FK_TIPO_HABITACION_CODIGO 
	
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_HOTEL_NUMERO')  )
	ALTER TABLE [GDD2020].[HABITACION] DROP CONSTRAINT FK_HOTEL_NUMERO
	
	--Tabla Hotel
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_HABITACION_NUMERO')  )
	ALTER TABLE [GDD2020].[HOTEL] DROP CONSTRAINT FK_HABITACION_NUMERO

	--Tabla Compra_Estadia
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id =OBJECT_ID(N'[GDD2020].FK_COMPRA_NUMERO_COMPRA_ESTADIA')  )
	ALTER TABLE [GDD2020].[COMPRA_ESTADIA] DROP CONSTRAINT FK_COMPRA_NUMERO_COMPRA_ESTADIA
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_HABITACION_ID')  )
	ALTER TABLE [GDD2020].[COMPRA_ESTADIA] DROP CONSTRAINT FK_HABITACION_ID
	
	--Estadia por dia
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_FACTURA_NRO')  )
	ALTER TABLE [GDD2020].[ESTADIA_X_DIA] DROP CONSTRAINT FK_FACTURA_NRO 

	--Venta Estadia
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_FACTURA_NRO1')  )
	ALTER TABLE [GDD2020].[VENTA_ESTADIA] DROP CONSTRAINT FK_FACTURA_NRO1
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_FECHA_ESTADIA_CODIGO')  )
	ALTER TABLE [GDD2020].[VENTA_ESTADIA] DROP CONSTRAINT FK_FECHA_ESTADIA_CODIGO
	
	--Factura
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_NUMERO_CLIENTE')  )
	ALTER TABLE [GDD2020].[FACTURA] DROP CONSTRAINT FK_NUMERO_CLIENTE 
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_SUCURSAL_CODIGO')  )
	ALTER TABLE [GDD2020].[FACTURA] DROP CONSTRAINT FK_SUCURSAL_CODIGO 
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_COMPRA_NUMERO_FACT')  )
	ALTER TABLE [GDD2020].[FACTURA] DROP CONSTRAINT FK_COMPRA_NUMERO_FACT
	
	--Compra
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_PASAJE_CODIGO')  )
	ALTER TABLE [GDD2020].[COMPRA] DROP CONSTRAINT FK_PASAJE_CODIGO 
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_PROVEEDOR_CODIGO')  )
	ALTER TABLE [GDD2020].[COMPRA] DROP CONSTRAINT FK_PROVEEDOR_CODIGO 
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_ESTADIA_ID')  )
	ALTER TABLE [GDD2020].[COMPRA] DROP CONSTRAINT FK_ESTADIA_ID
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_USUARIO_USERNAME')  )
	ALTER TABLE [GDD2020].[COMPRA] DROP CONSTRAINT FK_USUARIO_USERNAME


	-- Pasaje
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_VUELO_CODIGO')  )
	ALTER TABLE [GDD2020].[PASAJE] DROP CONSTRAINT FK_VUELO_CODIGO 
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_COMPRA_NRO')  )
	ALTER TABLE [GDD2020].[PASAJE] DROP CONSTRAINT FK_COMPRA_NRO
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_PASAJE_FACTURA_NRO')  )
	ALTER TABLE [GDD2020].[PASAJE] DROP CONSTRAINT FK_PASAJE_FACTURA_NRO	
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_PASAJE_TIPO_BUTACA')  )
	ALTER TABLE [GDD2020].[PASAJE] DROP CONSTRAINT FK_PASAJE_TIPO_BUTACA

	--Tipo Butaca
	IF EXISTS (  SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[GDD2020].FK_TIPO_BUTACA')  )
	ALTER TABLE [GDD2020].[BUTACA] DROP CONSTRAINT FK_TIPO_BUTACA

--Eliminar tablas
	PRINT('Eliminando tablas...')

	IF OBJECT_ID('[GDD2020].[SUCURSALES]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[SUCURSALES]

	IF OBJECT_ID('[GDD2020].[CLIENTE]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[CLIENTE]

	IF OBJECT_ID('[GDD2020].[PROVEEDOR]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[PROVEEDOR]

	IF OBJECT_ID('[GDD2020].[USUARIO]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[USUARIO]

	IF OBJECT_ID('[GDD2020].[ROLXUSUARIO]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[ROLXUSUARIO]

	IF OBJECT_ID('[GDD2020].[ROL]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[ROL]

	IF OBJECT_ID('[GDD2020].[FUNCIONALIDAD]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[FUNCIONALIDAD]

	IF OBJECT_ID('[GDD2020].[FUNCIONALIDADXROL]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[FUNCIONALIDADXROL]

	IF OBJECT_ID('[GDD2020].[TIPO_BUTACA]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[TIPO_BUTACA]

	IF OBJECT_ID('[GDD2020].[BUTACA]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[BUTACA]

	IF OBJECT_ID('[GDD2020].[AVION]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[AVION]

	IF OBJECT_ID('[GDD2020].[RUTA_AEREA]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[RUTA_AEREA]

	IF OBJECT_ID('[GDD2020].[VUELO]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[VUELO]

	IF OBJECT_ID('[GDD2020].[TIPO_HABITACION]', 'U') IS NOT NULL
	DROP TABLE [GDD2020].[TIPO_HABITACION]

	IF OBJECT_ID('[GDD2020].[HABITACION]', 'U') IS NOT NULL
	DROP TABLE [GDD2020].[HABITACION]

	IF OBJECT_ID('[GDD2020].[HOTEL]', 'U') IS NOT NULL
	DROP TABLE [GDD2020].[HOTEL]

	IF OBJECT_ID('[GDD2020].[COMPRA_ESTADIA]', 'U') IS NOT NULL
	DROP TABLE [GDD2020].[COMPRA_ESTADIA]

	IF OBJECT_ID('[GDD2020].[ESTADIA_X_DIA]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[ESTADIA_X_DIA]

	IF OBJECT_ID('[GDD2020].[VENTA_ESTADIA]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[VENTA_ESTADIA]

	IF OBJECT_ID('[GDD2020].[FACTURA]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[FACTURA]

	IF OBJECT_ID('[GDD2020].[COMPRA]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[COMPRA]

	IF OBJECT_ID('[GDD2020].[PASAJE]', 'U') IS NOT NULL 
	DROP TABLE [GDD2020].[PASAJE]

--BORRANDO ESQUEMA
	EXEC('DROP SCHEMA GDD2020');
	PRINT('Schema GDD2020 eliminado!')
END

--CREANDO NUEVO ESQUEMA
PRINT('Creando el Schema GDD2020...')
EXEC('CREATE SCHEMA GDD2020 AUTHORIZATION dbo');
GO

--CREANDO NUEVAS TABLAS

PRINT('Creando tablas...')

CREATE TABLE [GDD2020].[SUCURSALES](
	[SUCURSAL_CODIGO] BIGINT IDENTITY(1,1) PRIMARY KEY,
	[SUCURSAL_DIRECCION] [nvarchar](255) NOT NULL,
	[SUCURSAL_MAIL] [nvarchar](255) NOT NULL,
	[SUCURSAL_TELEFONO] [decimal](18, 0) NOT  NULL
)ON [PRIMARY]

CREATE TABLE [GDD2020].[USUARIO](
	[USUARIO_USERNAME] [nvarchar](20) NOT NULL PRIMARY KEY,
	[USUARIO_PASSWORD] BINARY(256) NOT NULL,
	[USUARIO_HABILITADO] BIT NOT NULL,
--	[USUARIO_RXU_CODIGO] BIGINT NOT NULL,
--	CONSTRAINT FK_USUARIO_RXU_CODIGO FOREIGN KEY([USUARIO_RXU_CODIGO]) REFERENCES [GDD2020].[ROLXUSUARIO](RXU_CODIGO)
)ON [PRIMARY]

CREATE TABLE [GDD2020].[ROL](
	ROL_CODIGO BIGINT IDENTITY(1,1) PRIMARY KEY,
	ROL_NOMBRE [nvarchar](255) NOT NULL UNIQUE,
	ROL_ACTIVO BIT NOT NULL
)ON [PRIMARY]

CREATE TABLE [GDD2020].[FUNCIONALIDAD](
	FUNCIONALIDAD_CODIGO BIGINT IDENTITY(1,1) PRIMARY KEY,
	FUNCIONALIDAD_NOMBRE [nvarchar](255) NOT NULL UNIQUE
) ON [PRIMARY]

CREATE TABLE [GDD2020].[ROLXUSUARIO](
	RXU_CODIGO BIGINT IDENTITY(1,1) PRIMARY KEY,
	RXU_ROL_CODIGO BIGINT NOT NULL,
	RXU_USUARIO_USERNAME [nvarchar](20) NOT NULL,
	CONSTRAINT UC_ROLXUSUARIO UNIQUE(RXU_ROL_CODIGO, RXU_USUARIO_USERNAME),
	CONSTRAINT FK_RXU_ROL_CODIGO FOREIGN KEY(RXU_ROL_CODIGO) REFERENCES [GDD2020].[ROL]([ROL_CODIGO]),
	CONSTRAINT FK_RXU_USUARIO_USERNAME FOREIGN KEY(RXU_USUARIO_USERNAME) REFERENCES [GDD2020].[USUARIO]([USUARIO_USERNAME])
) ON [PRIMARY]

CREATE TABLE [GDD2020].[FUNCIONALIDADXROL](
	RXF_CODIGO BIGINT IDENTITY(1,1) PRIMARY KEY,
	RXF_ROL_CODIGO BIGINT NOT NULL,
	RXF_FUNC_CODIGO BIGINT NOT NULL,
	CONSTRAINT UC_ROL_X_FUNCIONALIDAD UNIQUE(RXF_ROL_CODIGO, RXF_FUNC_CODIGO),
	CONSTRAINT FK_RXF_ROL_CODIGO FOREIGN KEY(RXF_ROL_CODIGO) REFERENCES [GDD2020].[ROL]([ROL_CODIGO]),
	CONSTRAINT FK_RXF_FUNC_CODIGO FOREIGN KEY(RXF_FUNC_CODIGO) REFERENCES [GDD2020].[FUNCIONALIDAD]([FUNCIONALIDAD_CODIGO])
) ON [PRIMARY]


CREATE TABLE [GDD2020].[CLIENTE](
	[CLIENTE_NUMERO] BIGINT IDENTITY(1,1) PRIMARY KEY,
	[CLIENTE_APELLIDO] [nvarchar](255)  NOT NULL,
	[CLIENTE_NOMBRE] [nvarchar](255)  NOT NULL,
	[CLIENTE_DNI] [decimal](18,0) NOT NULL,
	[CLIENTE_FECHA_NAC] [datetime2](3) NOT  NULL,
	[CLIENTE_MAIL] [nvarchar](255) NOT NULL,
	[CLIENTE_TELEFONO] [int] NOT NULL,
	[CLIENTE_USUARIO_USERNAME] [nvarchar](20) NOT NULL,
	CONSTRAINT FK_CLIENTE_USUARIO_USERNAME FOREIGN KEY([CLIENTE_USUARIO_USERNAME]) REFERENCES [GDD2020].[USUARIO]([USUARIO_USERNAME])
)ON [PRIMARY]



CREATE TABLE [GDD2020].[PROVEEDOR](
	[PROVEEDOR_CODIGO] BIGINT IDENTITY(1,1) PRIMARY KEY,
	[EMPRESA_RAZON_SOCIAL] [nvarchar](255) NOT NULL,
)ON [PRIMARY]


CREATE TABLE [GDD2020].[TIPO_BUTACA](
	TIPO_BUTACA_CODIGO BIGINT IDENTITY(1,1) PRIMARY KEY,
	TIPO_BUTACA_DESCRIPCION [nvarchar](255) NOT NULL,
)ON [PRIMARY]

CREATE TABLE [GDD2020].[BUTACA](
	BUTACA_NUMERO decimal(18,0)  NOT NULL,
	BUTACA_AVION_IDENTIFICADOR  [nvarchar](50) NOT NULL,
	TIPO_BUTACA_CODIGO BIGINT, 
	PRIMARY KEY (BUTACA_NUMERO, BUTACA_AVION_IDENTIFICADOR, TIPO_BUTACA_CODIGO ),
	CONSTRAINT FK_TIPO_BUTACA FOREIGN KEY (TIPO_BUTACA_CODIGO) REFERENCES [GDD2020].[TIPO_BUTACA](TIPO_BUTACA_CODIGO)
)ON [PRIMARY]

CREATE TABLE [GDD2020].[AVION](
	AVION_IDENTIFICADOR [nvarchar](50) NOT NULL PRIMARY KEY ,
	AVION_MODELO[nvarchar](50),
)ON [PRIMARY]

CREATE TABLE [GDD2020].[RUTA_AEREA](
    RUTA_AEREA_ID BIGINT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	RUTA_AEREA_CODIGO decimal (18,0) NOT NULL,
	RUTA_AEREA_CIU_ORIG [nvarchar](255) NOT NULL,
	RUTA_AEREA_CIU_DEST [nvarchar](255) NOT NULL,
)ON [PRIMARY]

CREATE TABLE [GDD2020].[VUELO](
	VUELO_CODIGO decimal (19,0) IDENTITY(1,1) PRIMARY KEY,
	VUELO_FECHA_SALIDA [datetime2](7) NOT NULL,
	VUELO_FECHA_LLEGADA [datetime2](7)  NOT NULL,
	VUELO_RUTA_AEREA_ID BIGINT NOT NULL, 
	VUELO_AVION_IDENTIFICADOR [nvarchar](50) NOT NULL, 
	CONSTRAINT FK_VUELO_AVION_IDENTIFICADOR FOREIGN KEY (VUELO_AVION_IDENTIFICADOR) REFERENCES [GDD2020].[AVION](AVION_IDENTIFICADOR),
	CONSTRAINT FK_VUELO_RUTA_AEREA_ID FOREIGN KEY (VUELO_RUTA_AEREA_ID) REFERENCES [GDD2020].[RUTA_AEREA](RUTA_AEREA_ID)
)ON [PRIMARY]

CREATE TABLE [GDD2020].[TIPO_HABITACION](
	TIPO_HABITACION_CODIGO [decimal](18, 0) IDENTITY(1,1)PRIMARY KEY,
	TIPO_HABITACION_DESC [nvarchar](50) NOT NULL
	)ON [PRIMARY]
	
CREATE TABLE [GDD2020].[HOTEL](
    HOTEL_CODIGO BIGINT IDENTITY(1,1) PRIMARY KEY,
	HOTEL_CALLE [nvarchar](50) NOT NULL,
	HOTEL_NRO_CALLE BIGINT NOT NULL,
	HOTEL_CANTIDAD_ESTRELLAS BIGINT NOT NULL
	)ON [PRIMARY]

CREATE TABLE [GDD2020].[HABITACION](
	HABITACION_ID BIGINT IDENTITY(1,1) PRIMARY KEY,
	HABITACION_NUMERO [decimal](18, 0),
	HABITACION_PISO [decimal](18, 0) NOT NULL,
	HABITACION_FRENTE [nvarchar](50) NOT NULL,
	HABITACION_COSTO [decimal](18, 2) NOT NULL,
	HABITACION_PRECIO [decimal](18, 2) NOT NULL,
	TIPO_HABITACION_CODIGO [decimal](18, 0) NOT NULL,
	HABITACION_HOTEL_CODIGO BIGINT NOT NULL,
	CONSTRAINT FK_HOTEL_NUMERO  FOREIGN KEY (HABITACION_HOTEL_CODIGO) REFERENCES [GDD2020].[HOTEL](HOTEL_CODIGO),
	CONSTRAINT FK_TIPO_HABITACION_CODIGO FOREIGN KEY (TIPO_HABITACION_CODIGO) REFERENCES [GDD2020].[TIPO_HABITACION](TIPO_HABITACION_CODIGO)
	)ON [PRIMARY]

CREATE TABLE [GDD2020].[COMPRA](
	COMPRA_NUMERO [decimal](18, 0) IDENTITY(1,1) PRIMARY KEY,	
	COMPRA_FECHA [datetime2](7),
	PROVEEDOR_CODIGO BIGINT NOT NULL,
	USUARIO_USERNAME [nvarchar](20) NOT NULL,
	CONSTRAINT FK_PROVEEDOR_CODIGO FOREIGN KEY (PROVEEDOR_CODIGO) REFERENCES [GDD2020].[PROVEEDOR](PROVEEDOR_CODIGO),
	CONSTRAINT FK_USUARIO_USERNAME FOREIGN KEY (USUARIO_USERNAME) REFERENCES [GDD2020].[USUARIO](USUARIO_USERNAME)
	)ON [PRIMARY]

CREATE TABLE [GDD2020].[COMPRA_ESTADIA](
	ESTADIA_CODIGO [decimal](18, 0) IDENTITY(1,1) PRIMARY KEY,
	ESTADIA_FECHA_INICIO [datetime2](7) NOT NULL,
	ESTADIA_CANTIDAD_NOCHES [decimal](18, 0) NOT NULL,
	ESTADIA_PRECIO_COSTO [decimal](18, 2) NOT NULL,
	HABITACION_ID BIGINT NOT NULL,
	ESTADIA_COMPRA_NUMERO [decimal](18, 0),
	CONSTRAINT FK_COMPRA_NUMERO_COMPRA_ESTADIA FOREIGN KEY (ESTADIA_COMPRA_NUMERO) REFERENCES [GDD2020].[COMPRA](COMPRA_NUMERO),
	CONSTRAINT FK_HABITACION_ID FOREIGN KEY (HABITACION_ID) REFERENCES [GDD2020].[HABITACION](HABITACION_ID)
	)ON [PRIMARY]

CREATE TABLE [GDD2020].[FACTURA](
	FACTURA_FECHA [datetime2](7),
	FACTURA_NRO BIGINT IDENTITY(1,1) PRIMARY KEY,
	NUMERO_CLIENTE BIGINT NOT NULL,
	SUCURSAL_CODIGO BIGINT NOT NULL,
	COMPRA_NUMERO [decimal](18, 0) NOT NULL,
	IMPORTE BIGINT NOT NULL,
	CONSTRAINT FK_NUMERO_CLIENTE FOREIGN KEY (NUMERO_CLIENTE) REFERENCES [GDD2020].[CLIENTE](CLIENTE_NUMERO),
	CONSTRAINT FK_SUCURSAL_CODIGO FOREIGN KEY (SUCURSAL_CODIGO) REFERENCES [GDD2020].[SUCURSALES](SUCURSAL_CODIGO),
	CONSTRAINT FK_COMPRA_NUMERO_FACT FOREIGN KEY (COMPRA_NUMERO) REFERENCES [GDD2020].[COMPRA](COMPRA_NUMERO)
	)ON [PRIMARY]

CREATE TABLE [GDD2020].[PASAJE](
	PASAJE_CODIGO BIGINT IDENTITY(1,1) PRIMARY KEY,
	PASAJE_COSTO BIGINT NOT NULL,
	PASAJE_PRECIO BIGINT NOT NULL,
	PASAJE_FECHA_COMPRA [datetime2](7),
	VUELO_CODIGO [decimal](19, 0) NOT NULL,
	PASAJE_COMPRA_NRO [decimal](18, 0),
	PASAJE_FACTURA_NRO BIGINT, 
	PASAJE_TIPO_BUTACA BIGINT,
	CONSTRAINT FK_VUELO_CODIGO FOREIGN KEY (VUELO_CODIGO) REFERENCES [GDD2020].[VUELO](VUELO_CODIGO),
	CONSTRAINT FK_COMPRA_NRO FOREIGN KEY (PASAJE_COMPRA_NRO) REFERENCES [GDD2020].[COMPRA](COMPRA_NUMERO),
	CONSTRAINT FK_PASAJE_FACTURA_NRO FOREIGN KEY (PASAJE_FACTURA_NRO) REFERENCES [GDD2020].[FACTURA](FACTURA_NRO),
	CONSTRAINT FK_PASAJE_TIPO_BUTACA FOREIGN KEY (PASAJE_TIPO_BUTACA) REFERENCES [GDD2020].[TIPO_BUTACA](TIPO_BUTACA_CODIGO)
	)ON [PRIMARY]
	
CREATE TABLE [GDD2020].[ESTADIA_X_DIA](
	FECHA [datetime2](7),--CLAVE COMPUESTA TAMBIEN ES PRIMARY KEY
	ESTADIA_CODIGO BIGINT NOT NULL,
	PRIMARY KEY(FECHA,ESTADIA_CODIGO),
	FACTURA_NRO BIGINT NOT NULL,
	--CONSTRAINT FK_FACTURA_NRO FOREIGN KEY (FACTURA_NRO) REFERENCES [GDD2020].[FACTURA](FACTURA_NRO)
	)ON [PRIMARY]

CREATE TABLE [GDD2020].[VENTA_ESTADIA](
	
	FACTURA_NRO BIGINT NOT NULL,
	FECHA [datetime2](7),
	ESTADIA_CODIGO BIGINT NOT NULL,
	VENTA_ESTADIA_CANTIDAD_NOCHES BIGINT NOT NULL,
	VENTA_ESTADIA_FECHA_CHECK_IN [datetime2](7),
	ESTADIA_PRECIO_VENTA BIGINT NOT NULL,
	CONSTRAINT FK_FACTURA_NRO1 FOREIGN KEY (FACTURA_NRO) REFERENCES [GDD2020].[FACTURA](FACTURA_NRO),
	--CONSTRAINT FK_FECHA_ESTADIA_CODIGO FOREIGN KEY (FECHA,ESTADIA_CODIGO) REFERENCES [GDD2020].[ESTADIA_X_DIA](FECHA,ESTADIA_CODIGO)
	)ON [PRIMARY]

--MIGRANDO DATOS

--CREO USUARIO 'usuarioNoDefinido' PARA USAR EN LA MIGRACION
INSERT INTO GDD2020.Usuario (USUARIO_USERNAME , USUARIO_PASSWORD , USUARIO_HABILITADO )
VALUES ('usuarioNoDefinido',1234, 1)

--CREO ROL
SET IDENTITY_INSERT GDD2020.ROL ON
INSERT INTO GDD2020.ROL (ROL_CODIGO, ROL_NOMBRE, ROL_ACTIVO)
VALUES (1122, 'RolNotDefined', 1)
SET IDENTITY_INSERT GDD2020.ROL OFF

--DOY ROL AL USER 
SET IDENTITY_INSERT GDD2020.ROLXUSUARIO ON
INSERT INTO GDD2020.ROLXUSUARIO(RXU_CODIGO, RXU_USUARIO_USERNAME, RXU_ROL_CODIGO)
VALUES (1111, 'usuarioNoDefinido', 1122)
SET IDENTITY_INSERT GDD2020.ROLXUSUARIO OFF

-- CREO FUNCIONALIDAD
SET IDENTITY_INSERT GDD2020.FUNCIONALIDAD ON
INSERT INTO GDD2020.FUNCIONALIDAD(FUNCIONALIDAD_CODIGO, FUNCIONALIDAD_NOMBRE)
VALUES (2211, 'FuncionalidadNotDefined')
SET IDENTITY_INSERT GDD2020.FUNCIONALIDAD OFF

-- ASIGNO FUNCIONALIDAD A ROL
SET IDENTITY_INSERT GDD2020.FUNCIONALIDADXROL ON
INSERT INTO GDD2020.FUNCIONALIDADXROL(RXF_CODIGO, RXF_ROL_CODIGO, RXF_FUNC_CODIGO)
VALUES (3333, 1122, 2211) 
SET IDENTITY_INSERT GDD2020.FUNCIONALIDADXROL OFF

--	
	
--INSERTAR EN TABLA CLIENTE	
SET IDENTITY_INSERT GDD2020.CLIENTE ON
INSERT INTO GDD2020.CLIENTE (CLIENTE_NUMERO, 
			CLIENTE_APELLIDO, CLIENTE_NOMBRE,
			CLIENTE_DNI, CLIENTE_FECHA_NAC, CLIENTE_MAIL, CLIENTE_TELEFONO, CLIENTE_USUARIO_USERNAME )	
SELECT DISTINCT ROW_NUMBER()OVER(ORDER BY CLIENTE_APELLIDO ASC) AS Row#,
				CLIENTE_APELLIDO, CLIENTE_NOMBRE, 
				CLIENTE_DNI, CLIENTE_FECHA_NAC , CLIENTE_MAIL , CLIENTE_TELEFONO, 'usuarioNoDefinido'
FROM gd_esquema.Maestra
WHERE CLIENTE_APELLIDO IS NOT NULL
SET IDENTITY_INSERT GDD2020.CLIENTE OFF

--INSERTAR EN TABLA SUCURSALES OK
INSERT INTO GDD2020.SUCURSALES (SUCURSAL_DIRECCION,SUCURSAL_MAIL , SUCURSAL_TELEFONO )	
SELECT DISTINCT SUCURSAL_DIR , SUCURSAL_MAIL , SUCURSAL_TELEFONO
FROM gd_esquema.Maestra 
WHERE SUCURSAL_DIR IS NOT NULL



--INSERTAR TABLA PROVEEDOR OK
INSERT INTO GDD2020.PROVEEDOR (EMPRESA_RAZON_SOCIAL)			
SELECT DISTINCT EMPRESA_RAZON_SOCIAL  
FROM gd_esquema.Maestra 
WHERE EMPRESA_RAZON_SOCIAL IS NOT NULL

INSERT INTO GDD2020.RUTA_AEREA(RUTA_AEREA_CODIGO,RUTA_AEREA_CIU_ORIG,RUTA_AEREA_CIU_DEST)
SELECT DISTINCT RUTA_AEREA_CODIGO,RUTA_AEREA_CIU_ORIG, RUTA_AEREA_CIU_DEST
FROM gd_esquema.Maestra 
WHERE RUTA_AEREA_CODIGO IS NOT NULL 


--INSERTAR TIPO_BUTACA --ok
INSERT INTO GDD2020.TIPO_BUTACA(TIPO_BUTACA_DESCRIPCION)
SELECT DISTINCT BUTACA_TIPO
FROM gd_esquema.Maestra 
WHERE BUTACA_TIPO IS NOT NULL

--INSERTAR BUTACA --ok
INSERT INTO GDD2020.BUTACA(BUTACA_NUMERO, BUTACA_AVION_IDENTIFICADOR, TIPO_BUTACA_CODIGO)
SELECT DISTINCT ma.BUTACA_NUMERO, AVION_IDENTIFICADOR, tb.TIPO_BUTACA_CODIGO
FROM gd_esquema.Maestra ma 
JOIN GDD2020.TIPO_BUTACA tb
ON ma.BUTACA_TIPO = tb.TIPO_BUTACA_DESCRIPCION
WHERE BUTACA_NUMERO IS NOT NULL 

--TIPO HABITACION --OK
SET IDENTITY_INSERT GDD2020.TIPO_HABITACION ON
INSERT INTO GDD2020.TIPO_HABITACION(TIPO_HABITACION_CODIGO,TIPO_HABITACION_DESC)
SELECT DISTINCT TIPO_HABITACION_CODIGO,TIPO_HABITACION_DESC
FROM gd_esquema.Maestra
WHERE TIPO_HABITACION_CODIGO IS NOT NULL
SET IDENTITY_INSERT GDD2020.TIPO_HABITACION OFF

--INSERTAR AVION --ok
INSERT INTO GDD2020.AVION(AVION_IDENTIFICADOR,AVION_MODELO)
SELECT DISTINCT AVION_IDENTIFICADOR ,AVION_MODELO
FROM gd_esquema.Maestra
WHERE AVION_IDENTIFICADOR IS NOT NULL

--HOTEL --
SET IDENTITY_INSERT GDD2020.CLIENTE ON
INSERT INTO GDD2020.HOTEL(HOTEL_CALLE,HOTEL_NRO_CALLE,
	HOTEL_CANTIDAD_ESTRELLAS)
SELECT DISTINCT HOTEL_CALLE,HOTEL_NRO_CALLE,HOTEL_CANTIDAD_ESTRELLAS
FROM gd_esquema.Maestra 
WHERE HOTEL_CALLE IS NOT NULL 
SET IDENTITY_INSERT GDD2020.CLIENTE OFF

--INSERTAR VUELO --ok
SET IDENTITY_INSERT GDD2020.VUELO ON
INSERT INTO GDD2020.VUELO(VUELO_CODIGO,VUELO_FECHA_SALIDA,
	VUELO_FECHA_LLEGADA,VUELO_RUTA_AEREA_ID,VUELO_AVION_IDENTIFICADOR)
SELECT DISTINCT ma.VUELO_CODIGO, VUELO_FECHA_SALUDA,VUELO_FECHA_LLEGADA,ra.RUTA_AEREA_ID,AVION_IDENTIFICADOR
FROM gd_esquema.Maestra ma
JOIN GDD2020.RUTA_AEREA ra
ON ma.RUTA_AEREA_CODIGO = ra.RUTA_AEREA_CODIGO AND ma.RUTA_AEREA_CIU_ORIG = ra.RUTA_AEREA_CIU_ORIG
WHERE VUELO_CODIGO IS NOT NULL
SET IDENTITY_INSERT GDD2020.VUELO OFF

--HABITACION --OK
--SET IDENTITY_INSERT GDD2020.HABITACION ON
INSERT INTO GDD2020.HABITACION(HABITACION_NUMERO,HABITACION_PISO,HABITACION_FRENTE,
	HABITACION_COSTO,HABITACION_PRECIO,TIPO_HABITACION_CODIGO, HABITACION_HOTEL_CODIGO)
SELECT DISTINCT HABITACION_NUMERO,HABITACION_PISO,HABITACION_FRENTE,
	HABITACION_COSTO,HABITACION_PRECIO,TIPO_HABITACION_CODIGO, ho.HOTEL_CODIGO
FROM gd_esquema.Maestra ma
JOIN GDD2020.HOTEL ho 
ON ma.HOTEL_CALLE = ho.HOTEL_CALLE AND ma.HOTEL_NRO_CALLE = ho.HOTEL_NRO_CALLE
	AND ma.HOTEL_CANTIDAD_ESTRELLAS = ho.HOTEL_CANTIDAD_ESTRELLAS
WHERE HABITACION_NUMERO IS NOT NULL
--SET IDENTITY_INSERT GDD2020.HABITACION OFF

--COMPRA
SET IDENTITY_INSERT GDD2020.COMPRA ON
INSERT INTO GDD2020.COMPRA(COMPRA_NUMERO, COMPRA_FECHA, 
	PROVEEDOR_CODIGO, USUARIO_USERNAME)
SELECT DISTINCT COMPRA_NUMERO, COMPRA_FECHA, 
	p.PROVEEDOR_CODIGO, 'usuarioNoDefinido'
FROM gd_esquema.Maestra ma
JOIN GDD2020.PROVEEDOR p 
ON ma.EMPRESA_RAZON_SOCIAL= p.EMPRESA_RAZON_SOCIAL
WHERE ma.COMPRA_FECHA IS NOT NULL
SET IDENTITY_INSERT GDD2020.COMPRA OFF

--COMPRA_ESTADIA
SET IDENTITY_INSERT GDD2020.COMPRA_ESTADIA ON
INSERT INTO GDD2020.COMPRA_ESTADIA(ESTADIA_CODIGO, ESTADIA_FECHA_INICIO, 
	ESTADIA_CANTIDAD_NOCHES, ESTADIA_PRECIO_COSTO, hab.HABITACION_ID, ESTADIA_COMPRA_NUMERO)
SELECT DISTINCT ma.ESTADIA_CODIGO, ma.ESTADIA_FECHA_INI, ma.ESTADIA_CANTIDAD_NOCHES,
	ma.HABITACION_COSTO, hab.HABITACION_ID, ma.COMPRA_NUMERO
FROM gd_esquema.Maestra ma
left JOIN GDD2020.HABITACION hab 
ON ma.TIPO_HABITACION_CODIGO = hab.TIPO_HABITACION_CODIGO
	 AND ma.HABITACION_PISO = hab.HABITACION_PISO
	AND ma.HABITACION_NUMERO = hab.HABITACION_NUMERO
	AND ma.HABITACION_FRENTE = hab.HABITACION_FRENTE
	AND ma.HABITACION_COSTO= hab.HABITACION_COSTO
	AND ma.HABITACION_PRECIO = hab.HABITACION_PRECIO
WHERE ESTADIA_CODIGO IS NOT NULL AND FACTURA_NRO IS NOT NULL
SET IDENTITY_INSERT GDD2020.COMPRA_ESTADIA OFF


--INSERTAR PASAJE 
SET IDENTITY_INSERT GDD2020.PASAJE ON
INSERT INTO GDD2020.PASAJE
	(PASAJE_CODIGO,PASAJE_COSTO,PASAJE_PRECIO,PASAJE_FECHA_COMPRA,VUELO_CODIGO, PASAJE_COMPRA_NRO, PASAJE_TIPO_BUTACA)
SELECT DISTINCT 
	ma.PASAJE_CODIGO,ma.PASAJE_COSTO,ma.PASAJE_PRECIO,ma.PASAJE_FECHA_COMPRA,ma.VUELO_CODIGO, ma.COMPRA_NUMERO, tb.TIPO_BUTACA_CODIGO
FROM gd_esquema.Maestra ma
JOIN gdd2020.Tipo_Butaca tb ON ma.BUTACA_TIPO= tb.TIPO_BUTACA_DESCRIPCION
WHERE ma.PASAJE_CODIGO IS NOT NULL
SET IDENTITY_INSERT GDD2020.PASAJE OFF



--INSERTAR EN TABLA FACTURA --
SET IDENTITY_INSERT GDD2020.FACTURA ON
INSERT INTO GDD2020.FACTURA (FACTURA_FECHA,FACTURA_NRO,NUMERO_CLIENTE,
	SUCURSAL_CODIGO,COMPRA_NUMERO,IMPORTE)
SELECT FACTURA_FECHA , FACTURA_NRO , cli.CLIENTE_NUMERO , suc.SUCURSAL_CODIGO , 
	COMPRA_NUMERO , ISNULL((HABITACION_PRECIO * ESTADIA_CANTIDAD_NOCHES + PASAJE_PRECIO),0) 
FROM gd_esquema.Maestra ma
JOIN GDD2020.CLIENTE cli 
ON ma.CLIENTE_DNI =  cli.CLIENTE_DNI 
	AND ma.CLIENTE_APELLIDO = cli.CLIENTE_APELLIDO
	AND cli.CLIENTE_FECHA_NAC = ma.CLIENTE_FECHA_NAC
	AND cli.CLIENTE_NOMBRE = ma.CLIENTE_NOMBRE
	AND cli.CLIENTE_TELEFONO = ma.CLIENTE_TELEFONO
	AND cli.CLIENTE_MAIL = ma.CLIENTE_MAIL
JOIN GDD2020.SUCURSALES suc
ON suc.SUCURSAL_DIRECCION = ma.SUCURSAL_DIR 
	AND suc.SUCURSAL_MAIL = ma.SUCURSAL_MAIL
WHERE FACTURA_NRO IS NOT NULL
SET IDENTITY_INSERT GDD2020.FACTURA OFF

--Agrego el nro de factura a la venta de pasajes:
UPDATE
    pp
SET
    pp.PASAJE_FACTURA_NRO = pasaje.FACTURA_NRO     
FROM
    gd_esquema.Maestra AS pasaje
    INNER JOIN GDD2020.PASAJE AS pp
        ON pasaje.PASAJE_CODIGO = pp.PASAJE_CODIGO
WHERE
    pasaje.FACTURA_NRO IS NOT NULL


-- VENTA_ESTADIA
INSERT INTO GDD2020.VENTA_ESTADIA(FECHA,FACTURA_NRO, ESTADIA_CODIGO, VENTA_ESTADIA_CANTIDAD_NOCHES,
	VENTA_ESTADIA_FECHA_CHECK_IN, ESTADIA_PRECIO_VENTA)
SELECT DISTINCT FACTURA_FECHA, FACTURA_NRO, ESTADIA_CODIGO, ESTADIA_CANTIDAD_NOCHES,
	ESTADIA_FECHA_INI, ISNULL((HABITACION_PRECIO * ESTADIA_CANTIDAD_NOCHES),0)
FROM gd_esquema.Maestra
WHERE FACTURA_NRO IS NOT NULL AND ESTADIA_CODIGO IS NOT NULL

